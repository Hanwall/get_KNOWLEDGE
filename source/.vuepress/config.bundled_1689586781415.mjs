var __getOwnPropNames = Object.getOwnPropertyNames;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// source/.vuepress/config/nav.ts
var NavItems4Project;
var init_nav = __esm({
  "source/.vuepress/config/nav.ts"() {
    NavItems4Project = [
      { text: "\u8BA1\u7B97\u673A\u79D1\u5B66", link: "/initwithmarkdown/\u8BA1\u7B97\u673A\u79D1\u5B66/" },
      {
        text: "\u6559\u80B2\u8BFE\u7A0B",
        items: [
          { text: "\u4E3B\u8BFE", items: [{ text: "\u8BED\u6587", link: "/initwithmarkdown/\u6559\u80B2\u8BFE\u7A0B/1mianclass/chinese/" }, { text: "\u6570\u5B66", link: "/initwithmarkdown/\u6559\u80B2\u8BFE\u7A0B/1mianclass/math/" }, { text: "\u82F1\u8BED", link: "/initwithmarkdown/\u6559\u80B2\u8BFE\u7A0B/1mianclass/english/" }] },
          { text: "\u7406\u79D1", items: [{ text: "\u7269\u7406", link: "/initwithmarkdown/\u6559\u80B2\u8BFE\u7A0B/2science/physics/" }, { text: "\u5316\u5B66", link: "/initwithmarkdown/\u6559\u80B2\u8BFE\u7A0B/2science/chemistry/" }, { text: "\u751F\u7269", link: "/initwithmarkdown/\u6559\u80B2\u8BFE\u7A0B/2science/biology/" }] },
          { text: "\u6587\u79D1", items: [{ text: "\u653F\u6CBB", link: "/initwithmarkdown/\u6559\u80B2\u8BFE\u7A0B/3arts/politics/" }, { text: "\u5386\u53F2", link: "/initwithmarkdown/\u6559\u80B2\u8BFE\u7A0B/3arts/history/" }, { text: "\u5730\u7406", link: "/initwithmarkdown/\u6559\u80B2\u8BFE\u7A0B/3arts/geography/" }] }
        ]
      }
    ];
  }
});

// source/.vuepress/config/shared.ts
function getStudySidebar(onetTitle, twoTitle, threeTitle, fourTitle, fiveTitle) {
  const sidebar = [
    {
      title: onetTitle,
      collapsable: false,
      sidebarDepth: 2,
      children: [
        "",
        "\u6570\u5B66\u57FA\u7840",
        "\u79D1\u5B66\u57FA\u7840"
      ]
    },
    {
      title: twoTitle,
      collapsable: false,
      sidebarDepth: 2,
      children: [
        "\u7B97\u6CD5\u548C\u6570\u636E\u7ED3\u6784",
        "\u64CD\u4F5C\u7CFB\u7EDF"
      ]
    }
  ];
  return sidebar;
}
var init_shared = __esm({
  "source/.vuepress/config/shared.ts"() {
  }
});

// source/.vuepress/config/sidebar.ts
var Sidebar4Project;
var init_sidebar = __esm({
  "source/.vuepress/config/sidebar.ts"() {
    init_shared();
    Sidebar4Project = {
      "/initwithmarkdown/\u8BA1\u7B97\u673A\u79D1\u5B66/": getStudySidebar("\u8BA1\u7B97\u673A\u79D1\u5B66\u7406\u8BBA", "\u8BA1\u7B97\u673A\u79D1\u5B66\u57FA\u7840", "\u7F16\u7A0B\u8BED\u8A00", "\u5DE5\u5177\u96C6", "\u67B6\u6784")
    };
  }
});

// source/.vuepress/config/index.ts
var init_config = __esm({
  "source/.vuepress/config/index.ts"() {
    init_nav();
    init_sidebar();
  }
});

// source/.vuepress/config.ts
var require_config = __commonJS({
  "source/.vuepress/config.ts"(exports, module) {
    init_config();
    module.exports = {
      title: "\u77E5\u8BC6\u5E93",
      description: "Just playing around",
      base: "/get_KNOWLEDGE/",
      Markdown: {
        extractHeaders: ["h2", "h3", "h4", "h5"]
      },
      extraWatchFiles: [".vuepress/config/**"],
      themeConfig: {
        repo: "https://github.com/Hanwall/get_KNOWLEDGE",
        repoLabel: "\u67E5\u770B\u6E90\u7801",
        logo: "/logo/loading.gif",
        editLinks: true,
        editLinkText: "\u67E5\u770B\u9875\u9762\uFF01",
        nextLinks: true,
        prevLinks: true,
        docsDir: "source",
        docsBranch: "master",
        lastUpdated: "\u6700\u540E\u66F4\u65B0\u65F6\u95F4",
        smoothScroll: true,
        nav: NavItems4Project,
        sidebar: Sidebar4Project
      },
      plugins: [
        ["@vuepress/last-updated", true],
        ["@vuepress/back-to-top", true],
        [
          "@vuepress/pwa",
          {
            serviceWorker: true,
            updatePopup: true
          }
        ],
        ["@vuepress/search", {
          searchMaxSuggestions: 10
        }],
        ["@vuepress/medium-zoom", true]
      ]
    };
  }
});
export default require_config();
//# sourceMappingURL=data:application/json;base64,
